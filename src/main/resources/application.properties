spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuraciones adicionales
#Inactividad maxima 60 seg
spring.datasource.hikari.idle-timeout=60000
#Min. conexiones inactivas
spring.datasource.hikari.minimum-idle=1
#Max. conexiones en el pool
spring.datasource.hikari.maximum-pool-size=10
#Deteccion de fuga de conexiones 5seg
spring.datasource.hikari.leak-detection-threshold=5000
#Vida maxima conexiones 3 min
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.connection-timeout=2000
spring.datasource.hikari.validation-timeout=1000
spring.datasource.hikari.data-source-properties.prepareThreshold=0

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Docs SPA fallback (activar AntPathMatcher) ---
spring.mvc.pathmatch.matching-strategy=ant_path_matcher


# --- Multipart config ---
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.jpa.properties.hibernate.format_sql=true

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# permitir que Jackson convierta "Masculino", "masculino", "MASCULINO", etc. en SexoEnum.MASCULINO
spring.jackson.mapper.accept_case_insensitive_enums=true

spring.web.resources.static-locations=classpath:/static/




