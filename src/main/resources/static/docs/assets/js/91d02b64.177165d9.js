"use strict";(self.webpackChunkclias_docs=self.webpackChunkclias_docs||[]).push([[4211],{4415:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"dev/Backend/setup","title":"Backend - Despliegue","description":"---","source":"@site/docs/dev/Backend/setup.md","sourceDirName":"dev/Backend","slug":"/dev/Backend/setup","permalink":"/docs/dev/Backend/setup","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Backend - Despliegue","sidebar_label":"Despliegue","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Seguridad","permalink":"/docs/dev/Backend/security"},"next":{"title":"Introducci\xf3n","permalink":"/docs/dev/Notificaciones/description"}}');var o=s(4848),a=s(8453);const l={title:"Backend - Despliegue",sidebar_label:"Despliegue",sidebar_position:6},i=void 0,c={},d=[{value:"Requisitos",id:"requisitos",level:2},{value:"Despliegue Local",id:"despliegue-local",level:2},{value:"Clonar el proyecto",id:"clonar-el-proyecto",level:3},{value:"PostgreSQL local",id:"postgresql-local",level:3},{value:"Configurar acceso a BD para local",id:"configurar-acceso-a-bd-para-local",level:3},{value:"Ejecuta la app de forma local",id:"ejecuta-la-app-de-forma-local",level:3},{value:"Despliegue en Producci\xf3n  con Docker Compose",id:"despliegue-en-producci\xf3n--con-docker-compose",level:2},{value:"Archivo docker-compose.yml",id:"archivo-docker-composeyml",level:3},{value:"Crear el volumen externo (requerido)",id:"crear-el-volumen-externo-requerido",level:3},{value:"Construir e iniciar",id:"construir-e-iniciar",level:3},{value:"Configuraci\xf3n de la app en producci\xf3n",id:"configuraci\xf3n-de-la-app-en-producci\xf3n",level:3},{value:"Logs y salud",id:"logs-y-salud",level:3}];function t(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["En este apartado se explica c\xf3mo ",(0,o.jsx)(n.strong,{children:"levantar el backend de CLIAS en local"})," a partir de la clonaci\xf3n del repositorio en github."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"requisitos",children:"Requisitos"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"JDK 21"})," (Amazon Corretto o Temurin)"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Maven 3.9+"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"PostgreSQL 14+"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Git 2.40+"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Docker / Docker Compose"})}),"\n",(0,o.jsxs)(n.li,{children:["IDE recomendado: ",(0,o.jsx)(n.strong,{children:"IntelliJ IDEA"})," (Community o Ultimate)"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Verifica versiones:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"java -version\nmvn -v\npsql --version\ndocker --version\ndocker compose version\n"})}),"\n",(0,o.jsx)(n.h2,{id:"despliegue-local",children:"Despliegue Local"}),"\n",(0,o.jsx)(n.h3,{id:"clonar-el-proyecto",children:"Clonar el proyecto"}),"\n",(0,o.jsx)(n.p,{children:"Con el siguiente  comando copiamos el repositorio:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/chr1s23/TelemedicinaBE.git\ncd TelemedicinaBE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Recomendamos abrir la carpeta del proyecto en IntelliJ IDEA, ya que este IDE  resuelve las dependencias de Maven r\xe1pidamente."}),"\n",(0,o.jsxs)(n.p,{children:["Despu\xe9s de tener el repositorio clonado, es necesario que crear la base de datos en ",(0,o.jsx)(n.strong,{children:"PostgreSQL"})," para un despliegue local."]}),"\n",(0,o.jsx)(n.h3,{id:"postgresql-local",children:"PostgreSQL local"}),"\n",(0,o.jsx)(n.p,{children:"Aseg\xfarate de tener PostgreSQL corriendo en localhost:5432.\nPuedes trabajar directamente con la BD postgres y el usuario postgres. Si necesitas crear un usuario/BD espec\xedficos, ejecuta algo como:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"-- Opcional: solo si quieres una BD propia (no obligatorio)\nCREATE DATABASE clias;\nCREATE USER clias WITH ENCRYPTED PASSWORD 'clias';\nGRANT ALL PRIVILEGES ON DATABASE clias TO clias;\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configurar-acceso-a-bd-para-local",children:"Configurar acceso a BD para local"}),"\n",(0,o.jsx)(n.p,{children:"En el repo, el application.properties ya trae dos variantes.\nPara local, usa las propiedades directas (descomentando estas l\xedneas y ajustando si hace falta):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# (LOCAL) USAR ACCESO DIRECTO A POSTGRES LOCAL\nspring.datasource.url=jdbc:postgresql://localhost:5432/postgres\nspring.datasource.username=postgres\nspring.datasource.password=postgres\n\n# (PRODUCCI\xd3N) ESTA VARIANTE QUEDA DESACTIVADA EN LOCAL\n# spring.datasource.url=${SPRING_DATASOURCE_URL}\n# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}\n# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}\n\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Deja el resto de par\xe1metros tal como est\xe1n en el repo (HikariCP, JPA, multipart, etc.).",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.strong,{children:"No necesitas"})," tocar ",(0,o.jsx)(n.code,{children:"driver-class-name"}),", ",(0,o.jsx)(n.code,{children:"ddl-auto"}),", ni los timeouts."]})}),"\n",(0,o.jsx)(n.h3,{id:"ejecuta-la-app-de-forma-local",children:"Ejecuta la app de forma local"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Con IntelliJ IDEA"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Abre la clase principal anotada con @SpringBootApplication."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Ejecuta Run \u25b6\ufe0f (o Shift+F10)"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"despliegue-en-producci\xf3n--con-docker-compose",children:"Despliegue en Producci\xf3n  con Docker Compose"}),"\n",(0,o.jsx)(n.p,{children:"Este despliegue levanta PostgreSQL y el Backend en contenedores.\nEl backend se conecta a la BD usando el hostname db dentro de la red de Docker."}),"\n",(0,o.jsx)(n.h3,{id:"archivo-docker-composeyml",children:"Archivo docker-compose.yml"}),"\n",(0,o.jsx)(n.p,{children:"Usa exactamente este contenido:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'version: "3.9"\n\nservices:\n  db:\n    image: postgres\n    container_name: postgres_db\n    restart: always\n    environment:\n      POSTGRES_DB: postgres\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n    ports:\n      - "5432:5432"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  app_be:\n    build: .\n    container_name: telemedicina_be\n    restart: always\n    depends_on:\n      - db\n    environment:\n      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres\n      SPRING_DATASOURCE_USERNAME: postgres\n      SPRING_DATASOURCE_PASSWORD: postgres\n      TZ: America/Guayaquil\n    ports:\n      - "8080:8080"\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n\nvolumes:\n  postgres_data:\n    external: true\n    name: telemedicinabe_postgres_data\n'})}),"\n",(0,o.jsx)(n.h3,{id:"crear-el-volumen-externo-requerido",children:"Crear el volumen externo (requerido)"}),"\n",(0,o.jsx)(n.p,{children:"El docker-compose usa un volumen externo llamado telemedicinabe_postgres_data.\nSi no existe, cr\xe9alo una sola vez:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker volume create telemedicinabe_postgres_data\n"})}),"\n",(0,o.jsx)(n.h3,{id:"construir-e-iniciar",children:"Construir e iniciar"}),"\n",(0,o.jsx)(n.p,{children:"Ejecuta desde la carpeta donde est\xe1 el docker-compose.yml (y el Dockerfile del backend):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose up -d --build\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"La BD quedar\xe1 disponible en el host en localhost:5432."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["La API quedar\xe1 publicada en ",(0,o.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"configuraci\xf3n-de-la-app-en-producci\xf3n",children:"Configuraci\xf3n de la app en producci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"No es necesario editar application.properties para producci\xf3n:\nel backend toma las credenciales de las variables de entorno definidas en app_be.environment:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"SPRING_DATASOURCE_USERNAME=postgres"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"SPRING_DATASOURCE_PASSWORD=postgres"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"Si quieres cambiar usuario/clave o el nombre de la BD en producci\xf3n, ajusta los valores en el servicio db y en app_be.environment."})}),"\n",(0,o.jsx)(n.h3,{id:"logs-y-salud",children:"Logs y salud"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose logs -f app_be\ndocker compose logs -f db\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var r=s(6540);const o={},a=r.createContext(o);function l(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);